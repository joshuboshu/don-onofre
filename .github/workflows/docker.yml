name: Django CI/CD Workflow

on:
  push:
    branches:
      - main  # Ejecutar en la rama principal, cambia si usas otra rama
  pull_request:
    branches:
      - main  # Ejecutar en pull requests hacia la rama principal

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports:
          - 5435:5432
        env:
          POSTGRES_DB: prueba_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123456
        options: --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker images
      run: |
        docker compose -f docker-compose.yml build

    - name: Run database migrations
      run: |
        docker compose -f docker-compose.yml up -d
        sleep 10  # Asegúrate de esperar a que la base de datos esté lista
        docker compose exec web python manage.py makemigrations
        docker compose exec web python manage.py migrate

    - name: Run tests
      run: |
        docker compose exec web python manage.py test  # Si tienes pruebas configuradas

    - name: Shut down Docker containers
      run: docker compose down

