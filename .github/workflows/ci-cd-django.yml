name: Django E-commerce CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jjobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: prueba_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123456
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      POSTGRES_DB: prueba_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest coverage
    
    - name: Wait for Postgres to be ready
      run: |
        until docker exec -T postgres pg_isready -U postgres; do
          echo "Waiting for postgres..."
          sleep 2
        done
    
    - name: Run Migrations
      env:
        POSTGRES_NAME: prueba_db
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: 123456
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
      run: |
        python manage.py makemigrations
        python manage.py migrate
    
    - name: Run Tests
      env:
        POSTGRES_NAME: prueba_db
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: 123456
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
      run: |
        coverage run manage.py test
        coverage report
    
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/django-ecommerce:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd /path/to/deployment
          docker-compose pull
          docker-compose up -d

